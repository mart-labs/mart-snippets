{
  "React Context with TypeScript": {
    "prefix": "rctx",
    "body": [
      "\"use client\";",
      "",
      "import { ReactNode, createContext, useContext } from \"react\";",
      "",
      "interface Values {}",
      "",
      "export const ${1:Empty}Context = createContext<Values | null>(null);",
      "",
      "export const ${2:${1:Empty}Provider} = ({ children }: { children: ReactNode }) => {",
      "  return <${1:Empty}Context.Provider value={{}}>{children}</${1:Empty}Context.Provider>;",
      "};",
      "",
      "export const ${3:use${1:Empty}} = () => {",
      "  const context = useContext(${1:Empty}Context);",
      "  if (!context) throw new Error(\"${3:use${1:Empty}} must be used within a ${2:${1:Empty}Provider}\");",
      "  return context;",
      "};"
    ],
    "description": "Generate a React context with TypeScript"
  },
    "React Functional Component": {
      "prefix": "rcomp",
      "body": [
        "export function ${TM_FILENAME_BASE}() {",
        "  return (",
        "    <div>${TM_FILENAME_BASE}</div>",
        "  )",
        "}"
      ],
      "description": "Crea un componente funcional de React con el nombre del archivo"
    }
  
}
